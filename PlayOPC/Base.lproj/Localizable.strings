/* EPanelViewController.updateShowApertureCell */
"$cell:ApertureValueNotAvailable" = "N/A";

/* EPanelViewController.viewDidLoad */
"$cell:AutoBracketingCount(%ld)" = "%ld images";

/* EPanelViewController.updateShowAutoBracketingCountCell */
"$cell:AutoBracketingCountUnknown" = "Unknown";

/* EPanelViewController.viewDidLoad */
"$cell:AutoBracketingModeDisabled" = "Disabled";

/* EPanelViewController.viewDidLoad */
"$cell:AutoBracketingModeExposure" = "Exposure";

/* No comment provided by engineer. */
"$cell:AutoBracketingStep(%ld)" = "±%ld steps";

/* EPanelViewController.updateShowAutoBracketingStepCell */
"$cell:AutoBracketingStepUnknown" = "Unknown";

/* SystemViewController.updateBatteryLevelCell */
"$cell:BatteryLevelUnknown" = "Unknown";

/* ConnectionViewController.updateShowBluetoothSettingCell */
"$cell:BluetoothNoConfiguration" = "No Configurations";

/* ConnectionViewController.updateShowBluetoothSettingCell */
"$cell:BluetoothNotConnected" = "Not Connected";

/* SystemViewController.updateHardwareInformationCells */
"$cell:CameraFirmwareVersionNotAvailable" = "N/A";

/* SystemViewController.updateHardwareInformationCells */
"$cell:CameraFirmwareVersionUnknown" = "Unknown";

/* SystemViewController.updateHardwareInformationCells */
"$cell:CameraModelNameUnknown" = "Unknown";

/* ConnectionViewController.didSelectRowAtConnectWithUsingWifiCell */
"$cell:ConnectingWifi" = "Connecting...";

/* PlaybackViewController.cellForRowAtIndexPath */
"$cell:ContentFileSize(%@ Bytes)" = "%@ bytes";

/* PlaybackViewController.cellForRowAtIndexPath */
"$cell:ContentHidden" = "Hidden";

/* PlaybackViewController.cellForRowAtIndexPath */
"$cell:ContentProtected" = "Protected";

/* CPanelViewController.updateShowContrastCell */
"$cell:ContrastNotAvailable" = "N/A";

/* CPanelViewController.updateShowContrastCell */
"$cell:ContrastUnknown" = "Unknown";

/* APanelViewController.updateCameraPropertyCell
   CPanelViewController.updateCameraPropertyCell
   EPanelViewController.updateCameraPropertyCell
   SPanelViewController.updateCameraPropertyCell
   SystemViewController.updateCameraPropertyCell
   VPanelViewController.updateCameraPropertyCell */
"$cell:CouldNotGetCameraPropertyValue" = "Unknown";

/* ZPanelViewController.updateDigitalZoomingCurrentScaleCell */
"$cell:CurrentDigitalZoomScale(%1.1f times)" = "%1.1f times";

/* ZPanelViewController.updateDigitalZoomingCurrentScaleCell */
"$cell:CurrentDigitalZoomScaleNotAvailable" = "N/A";

/* CPanelViewController.updateShowArtEffectHybridCell */
"$cell:EffectHybridNotAvailable" = "N/A";

/* CPanelViewController.updateShowArtEffectHybridCell */
"$cell:EffectHybridUnknown" = "Unknown";

/* CPanelViewController.updateShowEffectLevelCell */
"$cell:EffectNotAvailable" = "N/A";

/* CPanelViewController.updateShowArtEffectTypeCell */
"$cell:EffectTypeNotAvailable" = "N/A";

/* CPanelViewController.updateShowArtEffectTypeCell */
"$cell:EffectTypeUnknown" = "Unknown";

/* CPanelViewController.updateShowEffectLevelCell */
"$cell:EffectUnknown" = "Unknown";

/* EPanelViewController.updateShowExprevCell */
"$cell:ExposureCompensationNotAvailable" = "N/A";

/* SPanelViewController.updateExposureMeteringWarningCell */
"$cell:ExposureMeteringWarningNo" = "No";

/* SPanelViewController.updateExposureMeteringWarningCell */
"$cell:ExposureMeteringWarningYes" = "Yes";

/* SPanelViewController.updateExposureWarningCell */
"$cell:ExposureWarningNo" = "No";

/* SPanelViewController.updateExposureWarningCell */
"$cell:ExposureWarningYes" = "Yes";

/* SPanelViewController.updateHighTemperatureWarningCell */
"$cell:HighTemperatureWarningNo" = "No";

/* SPanelViewController.updateHighTemperatureWarningCell */
"$cell:HighTemperatureWarningYes" = "Yes";

/* EPanelViewController.viewDidLoad */
"$cell:IntervalTimerCount(%ld)" = "%ld images";

/* EPanelViewController.updateShowIntervalTimerCountCell */
"$cell:IntervalTimerCountUnknown" = "Unknown";

/* EPanelViewController.viewDidLoad */
"$cell:IntervalTimerModeDisabled" = "Disabled";

/* EPanelViewController.viewDidLoad */
"$cell:IntervalTimerModePriorCount" = "Prior Count";

/* EPanelViewController.viewDidLoad */
"$cell:IntervalTimerModePriorTime" = "Prior Total Time";

/* EPanelViewController.viewDidLoad */
"$cell:IntervalTimerTime(%ld minutes)" = "%ld minutes";

/* EPanelViewController.viewDidLoad */
"$cell:IntervalTimerTime(%ld seconds)" = "%ld seconds";

/* EPanelViewController.updateShowIntervalTimerTimeCell */
"$cell:IntervalTimerTimeUnknown" = "Unknown";

/* EPanelViewController.updateShowIsoCell */
"$cell:IsoSensitivityNotAvailable" = "N/A";

/* SPanelViewController.updateIsoSensitivityWarningCell */
"$cell:IsoSensitivityWarningNo" = "No";

/* SPanelViewController.updateIsoSensitivityWarningCell */
"$cell:IsoSensitivityWarningYes" = "Yes";

/* SystemViewController.updateLensMountStatusCell */
"$cell:LensError" = "Error";

/* SystemViewController.updateLensMountStatusCell */
"$cell:LensEZOption" = "EZ";

/* SystemViewController.updateHardwareInformationCells */
"$cell:LensFirmwareVersionNotAvailable" = "N/A";

/* SystemViewController.updateHardwareInformationCells */
"$cell:LensFirmwareVersionUnknown" = "Unknown";

/* SystemViewController.updateLensMountStatusCell */
"$cell:LensMacroOption" = "Macro";

/* SystemViewController.updateHardwareInformationCells */
"$cell:LensModelIdNotAvailable" = "N/A";

/* SystemViewController.updateHardwareInformationCells */
"$cell:LensModelIdUnknown" = "Unknown";

/* SystemViewController.updateLensMountStatusCell */
"$cell:LensMounted" = "Mounted";

/* SystemViewController.updateLensMountStatusCell */
"$cell:LensMounted(%@ Options)" = "Mounted (%@)";

/* SystemViewController.updateLensMountStatusCell */
"$cell:LensMountedButNotReady" = "Mounted (Not Ready)";

/* SystemViewController.updateLensMountStatusCell */
"$cell:LensNotMounted" = "Not Mounted";

/* SystemViewController.updateLensMountStatusCell */
"$cell:LensStatusUnknown" = "Unknown";

/* SPanelViewController.updateLevelGaugeCell */
"$cell:LevelGuageOrientationFaceDown" = "Face Down";

/* SPanelViewController.updateLevelGaugeCell */
"$cell:LevelGuageOrientationFaceUp" = "Face Up";

/* SPanelViewController.updateLevelGaugeCell */
"$cell:LevelGuageOrientationLandscape" = "Landscape";

/* SPanelViewController.updateLevelGaugeCell */
"$cell:LevelGuageOrientationPortrait" = "Portrait";

/* SPanelViewController.updateLevelGaugeCell */
"$cell:LevelGuageOrientationUnknown" = "Unknown";

/* SPanelViewController.updateLevelGaugeCell */
"$cell:LevelGuagePitchingDown(%1.1f Degrees)" = "Down %1.1f degrees";

/* SPanelViewController.updateLevelGaugeCell */
"$cell:LevelGuagePitchingNone(%1.1f Degrees)" = "%1.1f degrees";

/* SPanelViewController.updateLevelGaugeCell */
"$cell:LevelGuagePitchingUnknown" = "Unknown";

/* SPanelViewController.updateLevelGaugeCell */
"$cell:LevelGuagePitchingUp(%1.1f Degrees)" = "Up %1.1f degrees";

/* SPanelViewController.updateLevelGaugeCell */
"$cell:LevelGuageRollingLeft(%1.1f Degrees)" = "Left %1.1f degrees";

/* SPanelViewController.updateLevelGaugeCell */
"$cell:LevelGuageRollingNone(%1.1f Degrees)" = "%1.1f degrees";

/* SPanelViewController.updateLevelGaugeCell */
"$cell:LevelGuageRollingRight(%1.1f Degrees)" = "Right %1.1f degrees";

/* SPanelViewController.updateLevelGaugeCell */
"$cell:LevelGuageRollingUnknown" = "Unknown";

/* VPanelViewController.viewDidLoad */
"$cell:LiveViewSizeIsQuadVGA" = "Quad VGA (1280 × 960)";

/* VPanelViewController.viewDidLoad */
"$cell:LiveViewSizeIsQVGA" = "QVGA (320 x 240)";

/* VPanelViewController.viewDidLoad */
"$cell:LiveViewSizeIsSVGA" = "SVGA (800 x 600)";

/* VPanelViewController.viewDidLoad */
"$cell:LiveViewSizeIsVGA" = "VGA (640 x 480)";

/* VPanelViewController.viewDidLoad */
"$cell:LiveViewSizeIsXGA" = "XGA (1024 x 768)";

/* VPanelViewController.updateShowLiveViewSizeCell */
"$cell:LiveViewSizeUnknown" = "Unknown";

/* ZPanelViewController.viewDidLoad */
"$cell:MagnifyingLiveViewScale10" = "10 times";

/* ZPanelViewController.viewDidLoad */
"$cell:MagnifyingLiveViewScale14" = "14 times";

/* ZPanelViewController.viewDidLoad */
"$cell:MagnifyingLiveViewScale5" = "5 times";

/* ZPanelViewController.viewDidLoad */
"$cell:MagnifyingLiveViewScale7" = "7 times";

/* ZPanelViewController.updateShowMagnifyingLiveViewScaleCell */
"$cell:MagnifyingLiveViewScaleUnknown" = "Unknown";

/* ZPanelViewController.updateDigitalZoomingMaximumScaleCell */
"$cell:MaximumDigitalZoomScale(%1.1f times)" = "%1.1f times";

/* ZPanelViewController.updateDigitalZoomingMaximumScaleCell */
"$cell:MaximumDigitalZoomScaleNotAvailable" = "N/A";

/* SPanelViewController.updateMediaBusyCell */
"$cell:MediaBusyNo" = "No";

/* SPanelViewController.updateMediaBusyCell */
"$cell:MediaBusyYes" = "Yes";

/* SystemViewController.updateMediaMountStatusCell */
"$cell:MediaError" = "Error";

/* SPanelViewController.updateMediaErrorCell */
"$cell:MediaErrorNo" = "No";

/* SPanelViewController.updateMediaErrorCell */
"$cell:MediaErrorYes" = "Yes";

/* SystemViewController.updateMediaMountStatusCell */
"$cell:MediaMounted" = "Mounted";

/* SystemViewController.updateMediaMountStatusCell */
"$cell:MediaMountedButfull" = "Full";

/* SystemViewController.updateMediaMountStatusCell */
"$cell:MediaMountedButReadOnly" = "Read Only";

/* SystemViewController.updateMediaMountStatusCell */
"$cell:MediaNotMounted" = "Not Mounted";

/* SystemViewController.updateMediaMountStatusCell */
"$cell:MediaStatusUnknown" = "Unknown";

/* ZPanelViewController.updateDigitalZoomingMinimumScaleCell */
"$cell:MinimumDigitalZoomScale(%1.1f times)" = "%1.1f times";

/* ZPanelViewController.updateDigitalZoomingMinimumScaleCell */
"$cell:MinimumDigitalZoomScaleNotAvailable" = "N/A";

/* CPanelViewController.updateShowMonotonecolorCell */
"$cell:MonotonecolorNotAvailable" = "N/A";

/* CPanelViewController.updateShowMonotonecolorCell */
"$cell:MonotonecolorUnknown" = "Unknown";

/* CPanelViewController.updateShowMonotonefilterCell */
"$cell:MonotonefilterNotAvailable" = "N/A";

/* CPanelViewController.updateShowMonotonefilterCell */
"$cell:MonotonefilterUnknown" = "Unknown";

/* ZPanelViewController.updateOpticalZoomingCurrentFocalLengthCell */
"$cell:OpticalZoomingCurrentFocalLength(%1.1f mm)" = "%1.1f mm";

/* ZPanelViewController.updateOpticalZoomingCurrentFocalLengthCell */
"$cell:OpticalZoomingCurrentFocalLengthNotAvailable" = "N/A";

/* ZPanelViewController.updateOpticalZoomingMaximumFocalLengthCell */
"$cell:OpticalZoomingMaximumFocalLength(%1.1f mm)" = "%1.1f mm";

/* ZPanelViewController.updateOpticalZoomingMaximumFocalLengthCell */
"$cell:OpticalZoomingMaximumFocalLengthNotAvailable" = "N/A";

/* ZPanelViewController.updateOpticalZoomingMinimumFocalLengthCell */
"$cell:OpticalZoomingMinimumFocalLength(%1.1f mm)" = "%1.1f mm";

/* ZPanelViewController.updateOpticalZoomingMinimumFocalLengthCell */
"$cell:OpticalZoomingMinimumFocalLengthNotAvailable" = "N/A";

/* ZPanelViewController.viewDidLoad */
"$cell:OpticalZoomingSpeedBusrt" = "Burst";

/* ZPanelViewController.viewDidLoad */
"$cell:OpticalZoomingSpeedFast" = "Fast";

/* ZPanelViewController.viewDidLoad */
"$cell:OpticalZoomingSpeedNormal" = "Normal";

/* ZPanelViewController.viewDidLoad */
"$cell:OpticalZoomingSpeedSlow" = "Slow";

/* SPanelViewController.updateRemainingImageCapacityCell */
"$cell:RemainingImageCapacity(%@ Images)" = "%@ images";

/* SPanelViewController.updateRemainingVideoCapacityCell */
"$cell:RemainingImageCapacity(%ld,%ld,%ld)" = "%1$ld:%2$02ld:%3$02ld";

/* SPanelViewController.updateRemainingMediaCapacityCell */
"$cell:RemainingMediaCapacity(%@ Bytes or more)" = "%@ bytes or more";

/* SPanelViewController.updateRemainingMediaCapacityCell */
"$cell:RemainingMediaCapacity(%@ Bytes)" = "%@ bytes";

/* CPanelViewController.updateShowSaturationLevelCell */
"$cell:SaturationNotAvailable" = "N/A";

/* CPanelViewController.updateShowSaturationLevelCell */
"$cell:SaturationUnknown" = "Unknown";

/* FavoriteLoadingViewController.cellForRowAtIndexPath */
"$cell:SavingFavoriteSettingIsHoursAgo(%ld)" = "%ld hours ago";

/* FavoriteLoadingViewController.cellForRowAtIndexPath */
"$cell:SavingFavoriteSettingIsMinutesAgo(%ld)" = "%ld minutes ago";

/* FavoriteLoadingViewController.cellForRowAtIndexPath */
"$cell:SavingFavoriteSettingIsNow" = "Now";

/* FavoriteLoadingViewController.cellForRowAtIndexPath */
"$cell:SavingFavoriteSettingIsSecondsAgo(%ld)" = "%ld seconds ago";

/* CPanelViewController.updateShowSharpCell */
"$cell:SharpNotAvailable" = "N/A";

/* CPanelViewController.updateShowSharpCell */
"$cell:SharpUnknown" = "Unknown";

/* EPanelViewController.updateShowShutterCell */
"$cell:ShutterSpeedNotAvailable" = "N/A";

/* CPanelViewController.updateShowToneCell */
"$cell:ToneNotAvailable" = "N/A";

/* CPanelViewController.updateShowToneCell */
"$cell:ToneUnknown" = "Unknown";

/* CPanelViewController.updateShowWbRevGCell */
"$cell:WbRevGNotAvailable" = "N/A";

/* CPanelViewController.updateShowWbRevGCell */
"$cell:WbRevGUnknown" = "Unknown";

/* CPanelViewController.updateShowWbRevCell */
"$cell:WbRevNotAvailable" = "N/A";

/* CPanelViewController.updateShowWbRevCell */
"$cell:WbRevUnknown" = "Unknown";

/* ConnectionViewController.updateShowWifiSettingCell */
"$cell:WifiConnected(null)" = "Connected";

/* ConnectionViewController.updateShowWifiSettingCell */
"$cell:WifiNoConfiguration" = "No Configurations";

/* ConnectionViewController.updateShowWifiSettingCell */
"$cell:WifiNotConnected" = "Not Connected";

/* ConnectionViewController.updateShowWifiSettingCell */
"$cell:WifiNotConnected(null)" = "Connected Another";

/* ConnectionViewController.updateShowWifiSettingCell */
"$cell:WifiStatusUnknown" = "Unknown";

/* AppCamera.startTakingPluralPictures */
"$desc:AutoBrackettingCountIsIncorrect" = "Auto bracketing count is incorrect.";

/* AppCamera.startTakingPluralPictures */
"$desc:AutoBrackettingStepIsIncorrect" = "Auto bracketing step is incorrect.";

/* BluetoothConnector.connectPeripheral */
"$desc:BluetoothPeripheralConnected" = "Bluetooth device is already connected.";

/* BluetoothConnector.disconnectPeripheral */
"$desc:BluetoothPeripheralDisconnected" = "Bluetooth device is already disconnected.";

/* BluetoothConnector.discoverPeripheral */
"$desc:BluetoothPeripheralFound" = "Bluetooth device is already found.";

/* AppCamera.startTakingPluralPictures */
"$desc:CameraCouldNotChangeValueOfProperty" = "Camera could not change a value of property.";

/* AppCamera.startTakingPluralPictures */
"$desc:CameraIsNotConnected" = "Camera is not connected.";

/* AppCamera.startTakingPluralPictures */
"$desc:CameraIsNotRecordingMode" = "Camera is not Recording mode.";

/* ItemSelectionViewController.didSelectRowAtIndexPath */
"$desc:CanNotSelectItemInTaking" = "Changing this setting is not permitted during capturing image.";

/* ArtbktPanelViewController.didSelectRowAtIndexPath
   CameraPropertyValueSelectionViewController.didSelectRowAtIndexPath */
"$desc:CanNotSetCameraProperty" = "Changing this camera property is not permitted currently.";

/* CameraPropertyValueSelectionViewController.didSelectRowAtIndexPath */
"$desc:CanNotSetCameraPropertyInTaking" = "Changing this camera property is not permitted during capturing image.";

/* BluetoothConnector.connectPeripheral
   BluetoothConnector.disconnectPeripheral
   BluetoothConnector.discoverPeripheral */
"$desc:CBCentralManagerStateNotPoweredOn" = "Bluetooth function is not available. Please enable it at Settings.";

/* RecordingLocationManager.currentLocation */
"$desc:CLLocationManagerAuthorizationStatusIsNotAuthorized" = "Location service is not authorized.";

/* BluetoothConnector.connectPeripheral */
"$desc:ConnectingBluetoothPeripheralTimedOut" = "Connecting Bluetooth peripheral timed out.";

/* BluetoothConnector.connectPeripheral */
"$desc:ConnectPeripheralIsRunnning" = "Connecting a Bluetooth device is running.";

/* ConnectionViewController.didSelectRowAtConnectWithUsingBluetoothCell
   ConnectionViewController.didSelectRowAtConnectWithUsingWifiCell */
"$desc:CouldNotConnectBluetoothByEmptySetting" = "Bluetooth local name is empty. Please configure it at Bluetooth setting.";

/* ConnectionViewController.didSelectRowAtConnectWithUsingWifiCell */
"$desc:CouldNotConnectWifiPassphraseByEmptySetting" = "Wi-Fi passphrase is empty. Please configure it at Wi-Fi setting.";

/* ConnectionViewController.didSelectRowAtConnectWithUsingWifiCell */
"$desc:CouldNotConnectWifiSsidByEmptySetting" = "Wi-Fi SSID is empty. Please configure it at Wi-Fi setting.";

/* FavoriteLoadingViewController.editActionsForRowAtIndexPath */
"$desc:CouldNotDeleteFavoriteSetting" = "Could not erase a favorite setting file in the application's document folder.";

/* ConnectionViewController.didSelectRowAtConnectWithUsingWifiCell */
"$desc:CouldNotDiscoverWifiConnection" = "The camera did wake up, but Wi-Fi connection was not found. This device is in condition not to be connected automatically, or other devices may be already connected.";

/* FavoriteForgingViewController.didTapSaveButton */
"$desc:CouldNotForgeFavoriteSnapshotOfSetting" = "Could not translate information to a favorite setting.";

/* ContentDetailViewController.didTapShareButton */
"$desc:CouldNotForgeSnapshotOfSetting" = "Could not translate information to a camera setting.";

/* RecordingLocationManager.currentLocation */
"$desc:CouldNotGetCurrentGeolocation" = "Could not get current geolocation.";

/* ReferenceViewController.shouldStartLoadWithRequest */
"$desc:CouldNotOpenWebLinkByNoInternet" = "The device does not connect to the Internet. If you want to open the site via Wi-Fi, it is necessary to disconnect camera connection first.";

/* RecordingLocationManager.currentLocation */
"$desc:CouldNotPerformCurrentLocationInMainThread" = "Could not acquire the current location.";

/* FavoriteLoadingViewController.didSelectRowAtIndexPath
   FavoriteLoadingViewController.editActionsForRowAtIndexPath */
"$desc:CouldNotReadFavoriteSettingFile" = "Could not read a favorite setting file.";

/* FavoriteForgingViewController.didTapSaveButton
   FavoriteSavingViewController.didTapSaveButton */
"$desc:CouldNotWriteFavoriteSettingFile" = "Could not write a favorite setting file.";

/* RecordingLocationManager.currentLocation */
"$desc:CurrentLocationIsRunning" = "To acquire the current location is running.";

/* AppCamera.restoreSnapshotOfSetting */
"$desc:DataFormatIsNotSnapshotOfSetting" = "Data format is not snapshot of setting.";

/* BluetoothSettingViewController.didTapDoneButton */
"$desc:DelayNewBluetoothSetting" = "The new Bluetooth setting will be applied at the next connecting.";

/* WifiSettingViewController.didTapDoneButton */
"$desc:DelayNewWifiHostSetting" = "The new Wi-Fi setting will be applied at the next connecting.";

/* SystemViewController.didChangeWifiCh */
"$desc:DelayNewWifiSetting" = "The new Wi-Fi setting will be applied at the next waking-up.";

/* BluetoothConnector.disconnectPeripheral */
"$desc:DisconnectingBluetoothPeripheralTimedOut" = "Disconnecting Bluetooth peripheral timed out.";

/* ConnectionViewController.didSelectRowAtDisconnectAndSleepCell
   ConnectionViewController.didSelectRowAtDisconnectCell */
"$desc:DisconnectingWifi" = "Disconnecting...";

/* BluetoothConnector.disconnectPeripheral */
"$desc:DisconnectPeripheralIsRunnning" = "Disconnecting a Bluetooth device is running.";

/* BluetoothConnector.discoverPeripheral */
"$desc:DiscorverPeripheralIsRunnning" = "Discovering a Bluetooth device is running.";

/* BluetoothConnector.discoverPeripheral */
"$desc:DiscoveringBluetoothPeripheralTimedOut" = "Bluetooth device was not found. A radio switch of camera may be off.";

/* PictureContentViewController.didTapEraseButton */
"$desc:ErasePicture" = "If there is ORF file related to this picture, it will be erased at the same time too.";

/* AppCamera.startTakingPluralPictures */
"$desc:IntervalTimerCountIsIncorrect" = "Interval timer count is incorrect.";

/* AppCamera.startTakingPluralPictures */
"$desc:IntervalTimerTimeIsIncorrect" = "Interval timer time is incorrect.";

/* RecordingViewController.lockAutoExposurePoint
   RecordingViewController.lockAutoFocusPoint
   RecordingViewController.startMagnifyingLiveView */
"$desc:LiveViewImageIsEmpty" = "The camera is not sending application any image of the live view. Could not calculate a touched point in the live view.";

/* WifiConnector.stopMonitoring */
"$desc:MonitoringIsNotRunnning" = "Monitoring a status of Wi-Fi connection is not running.";

/* WifiConnector.startMonitoring */
"$desc:MonitoringIsRunnning" = "Monitoring a status of Wi-Fi connection is already running.";

/* BluetoothConnector.connectPeripheral
   BluetoothConnector.disconnectPeripheral */
"$desc:NoBluetoothPeripherals" = "No Bluetooth devices.";

/* ConnectionViewController.didSelectRowAtConnectWithUsingWifiCell */
"$desc:NoWifiConnections" = "No Wi-fi Connections. You have to connect the device to the camera by manual operation at Setting.";

/* SPanelViewController.didSelectRowAtDoPasteCameraSetting */
"$desc:PasteboardTextIsNotCameraSetting" = "Pasteboard text is not camera setting.";

/* PictureContentViewController.didTapProtectButton */
"$desc:ProtectPicture" = "If there is ORF file related to this picture, it will be protected at the same time too.";

/* PictureContentViewController.didTapResizeButton */
"$desc:ResizePicture" = "An image with a long side pixel size of specified length is downloaded, the current image will be replaced at it.";

/* VideoContentViewController.didTapResizeButton */
"$desc:ResizeVideo(wait %1.0f sec)" = "A new video with a long side pixel size of specified length will be added to camera storage. This processing takes %1.0f seconds at least.";

/* ScanStickerViewController.showAlertMessage */
"$desc:ScanResult(%@,%@,%@,%@)" = "S/N: %1$@\nSSID: %2$@\nPassword: %3$@\nBluetooth: %4$@\nApply the scan result to Wi-Fi and Bluetooth network settings?";

/* VideoContentViewController.didTapShareButton */
"$desc:ShareLargeVideo" = "The application downloads this long video before sharing it. The handling may take more than several minutes.";

/* PictureContentViewController.didTapShareButton */
"$desc:SharePicture" = "The application does share this resized picture. (EXIF tag, GPS tag and so metadata include)";

/* VideoContentViewController.didTapShareButton */
"$desc:ShareVideo" = "The application downloads this video before sharing it. The handling takes a little bit of time.";

/* AppCamera.startTakingPluralPictures */
"$desc:TakingPluralPicturesIsNotAvailable" = "Auto bracketing or interval timer is not available.";

/* PictureContentViewController.didTapUnprotectButton */
"$desc:UnprotectPicture" = "If there is ORF file related to this picture, it will be unprotect at the same time too.";

/* ConnectionViewController.didSelectRowAtConnectWithUsingWifiCell */
"$desc:WifiConnectionIsNotCamera" = "Turned on  the camera, however, it seems that this Wi-Fi connection is unable to communicate with the camera. Please allow 'Local Network' in 'Settings' or manually disconnect the current Wi-Fi connection and connect to the camera.";

/* RecordingViewController.cameraDidTakePictureByAutoBracketing
   RecordingViewController.cameraWillTakePictureByAutoBracketing */
"$title:AutoBracketingProgres(%ld,%ld)" = "Auto Bracketing: %1$ld/%2$ld";

/* RecordingViewController.cameraDidStartTakingPluralPictures */
"$title:AutoBracketingStart" = "Auto Bracketing";

/* UIViewController.showAlertMessage */
"$title:Cancel" = "Cancel";

/* ConnectionViewController.didSelectRowAtClearRememberedCameraSettingCell */
"$title:CancelClearCameraSetting" = "Cancel";

/* CameraLogViewController.didTapClearButton */
"$title:CancelClearLog" = "Cancel";

/* PictureContentViewController.didTapEraseButton */
"$title:CancelErasePicture" = "Cancel";

/* VideoContentViewController.didTapEraseButton */
"$title:CancelEraseVideo" = "Cancel";

/* PictureContentViewController.didTapProtectButton */
"$title:CancelProtectPicture" = "Cancel";

/* VideoContentViewController.didTapProtectButton */
"$title:CancelProtectVideo" = "Cancel";

/* PictureContentViewController.didTapResizeButton */
"$title:CancelResizePicture" = "Cancel";

/* VideoContentViewController.didTapResizeButton */
"$title:CancelResizeVideo" = "Cancel";

/* PictureContentViewController.didTapShareButton */
"$title:CancelSharePicture" = "Cancel";

/* VideoContentViewController.didTapShareButton */
"$title:CancelShareVideo" = "Cancel";

/* PlaybackViewController.didTapUnprotectButton */
"$title:CancelUnprotectAllContents" = "Cancel";

/* PictureContentViewController.didTapUnprotectButton */
"$title:CancelUnprotectPicture" = "Cancel";

/* VideoContentViewController.didTapUnprotectButton */
"$title:CancelUnprotectVideo" = "Cancel";

/* ItemSelectionViewController.didSelectRowAtIndexPath */
"$title:CanNotSelectItemInTaking" = "Cannot change setting";

/* ArtbktPanelViewController.didSelectRowAtIndexPath
   CameraPropertyValueSelectionViewController.didSelectRowAtIndexPath */
"$title:CanNotSetCameraProperty" = "Cannot change camera property";

/* CameraPropertyValueSelectionViewController.didSelectRowAtIndexPath */
"$title:CanNotSetCameraPropertyInTaking" = "Cannot change camera property";

/* ContentDetailViewController.tabeView:titleForHeaderInSection */
"$title:ContentDetail" = "Content Detail Information";

/* ContentDetailViewController.tabeView:titleForHeaderInSection */
"$title:ContentMetadata" = "Content Metadata";

/* ZPanelViewController.didChangeDigitalZoomingSliderValue */
"$title:CouldNotChangeDigitalZoomScale" = "Could not change zooming scale";

/* VPanelViewController.didSelectLiveViewSizeItem */
"$title:CouldNotChangeLiveViewSize" = "Could not change live view size";

/* ZPanelViewController.didSelectMagnifyingLiveViewScaleItem */
"$title:CouldNotChangeMagnifyingScale" = "Could not change magnifying scale";

/* RecordingViewController.changeMagnifyingLiveViewArea */
"$title:CouldNotChangeMagnifyingViewArea" = "Could not change change magnifying area";

/* VPanelViewController.didSelectRowAtClearGelocationCell */
"$title:CouldNotClearGelocation" = "Could not clear geolocation";

/* ConnectionViewController.didSelectRowAtConnectWithUsingBluetoothCell */
"$title:CouldNotConnectBluetooth" = "Could not connect with using Bluetooth";

/* ConnectionViewController.didSelectRowAtConnectWithUsingWifiCell */
"$title:CouldNotConnectWifi" = "Could not connect with using Wi-Fi";

/* SPanelViewController.didSelectRowAtDoCopyCameraSetting */
"$title:CouldNotCopyCameraSetting" = "Could not copy camera setting";

/* FavoriteLoadingViewController.editActionsForRowAtIndexPath */
"$title:CouldNotDeleteFavoriteSetting" = "Could not erase a favorite setting";

/* PlaybackViewController.downloadContentList */
"$title:CouldNotDownloadContentList" = "Could not download content list";

/* PlaybackViewController.commitEditingStyle */
"$title:CouldNotEraseContent" = "Could not erase content";

/* PictureContentViewController.erasePicture */
"$title:CouldNotErasePicture" = "Could not erase picture";

/* VideoContentViewController.eraseVideo */
"$title:CouldNotEraseVideo" = "Could not erase video";

/* CameraPropertyValueSelectionViewController.didStartActivity */
"$title:CouldNotGetCameraPropertyValue" = "Could not get camera property value";

/* CameraPropertyValueSelectionViewController.didStartActivity */
"$title:CouldNotGetCameraPropertyValueList" = "Could not get camera property value list";

/* ArtbktPanelViewController.didStartActivity */
"$title:CouldNotGetCameraPropertyValues" = "Could not get camera property values";

/* ContentDetailViewController.didStartActivity */
"$title:CouldNotGetContentInformation" = "Could not get content information";

/* VideoContentViewController.downloadScreennail */
"$title:CouldNotGetScreennail" = "Could not get screennail";

/* FavoriteLoadingViewController.didSelectRowAtIndexPath */
"$title:CouldNotLoadFavoriteSetting" = "Could not load favorite setting";

/* ReferenceViewController.shouldStartLoadWithRequest */
"$title:CouldNotOpenWebLink" = "Could not open link to the Web";

/* SPanelViewController.didSelectRowAtDoPasteCameraSetting */
"$title:CouldNotPasteCameraSetting" = "Could not paste camera setting";

/* PictureContentViewController.protectPicture */
"$title:CouldNotProtectPicture" = "Could not protect picture";

/* VideoContentViewController.protectVideo */
"$title:CouldNotProtectVideo" = "Could not protect video";

/* PictureContentViewController.downloadResizedImage
   RecImageViewController.didTapResizeButton */
"$title:CouldNotResizePicture" = "Could not resize picture";

/* VideoContentViewController.resizeVideo */
"$title:CouldNotResizeVideo" = "Could not resize video";

/* RecordingViewController.didStartActivity */
"$title:CouldNotRestoreLastestCameraSetting" = "Could not restore latest camera setting";

/* RecordingViewController.didReceiveCapturedImage */
"$title:CouldNotSaveCapturedImage" = "Could not save captured image";

/* FavoriteForgingViewController.didTapSaveButton
   FavoriteSavingViewController.didTapSaveButton */
"$title:CouldNotSaveFavoriteSetting" = "Could not save favorite setting";

/* ArtbktPanelViewController.didSelectRowAtIndexPath
   CameraPropertyValueSelectionViewController.didSelectRowAtIndexPath */
"$title:CouldNotSetCameraPropertyValue" = "Could not set camera property value";

/* VPanelViewController.didSelectRowAtSetCurrentGeolocationCell */
"$title:CouldNotSetCurrentGeolocation" = "Could not set current geolocation";

/* FavoriteLoadingViewController.editActionsForRowAtIndexPath */
"$title:CouldNotShareFavoriteSetting" = "Could not share favorite setting";

/* ContentDetailViewController.didTapShareButton */
"$title:CouldNotShareForgedSetting" = "Could not share camera setting";

/* VideoContentViewController.shareVideo */
"$title:CouldNotShareVideo" = "Could not share video";

/* ZPanelViewController.didChangeOpticalZoomingSliderValue
   ZPanelViewController.didSelectRowAtZoomTowardTeleEnd
   ZPanelViewController.didSelectRowAtZoomTowardWideEnd */
"$title:CouldNotStartDrivingZoomLens" = "Could not zoom";

/* RecordingViewController.startMagnifyingLiveView
   ZPanelViewController.didChangeMagnifyingLiveView */
"$title:CouldNotStartMagnifying" = "Could not magnifying";

/* PlaybackViewController.didStartActivity */
"$title:CouldNotStartPlaybackMode" = "Could not start Playback mode";

/* RecordingViewController.didStartActivity */
"$title:CouldNotStartRecordingMode" = "Could not start Recording mode";

/* RecordingViewController.startRecordingVideo */
"$title:CouldNotStartRecordingVideo" = "Could not start recording video";

/* SystemViewController.didStartActivity */
"$title:CouldNotStartSystemMode" = "Could not start System mode";

/* RecordingViewController.startTakingPicture */
"$title:CouldNotStartTakingPicture" = "Could not start taking picture";

/* RecordingViewController.startTakingPluralPictures */
"$title:CouldNotStartTakingPluralPictures" = "Could not start taking picture";

/* RecordingViewController.stopMagnifyingLiveView
   ZPanelViewController.didSelectRowAtStopMagnifyingLiveView */
"$title:CouldNotStopMagnifying" = "Could not stop magnifying";

/* RecordingViewController.stopRecordingVideo */
"$title:CouldNotStopRecordingVideo" = "Could not stop recording video";

/* RecordingViewController.stopTakingPicture */
"$title:CouldNotStopTakingPicture" = "Could not stop taking picture";

/* RecordingViewController.stopTakingPicturePluralPictures */
"$title:CouldNotStopTakingPluralPictures" = "Could not stop taking picture";

/* RecordingViewController.takePicture */
"$title:CouldNotTakePicture" = "Could not take picture";

/* APanelViewController.didSelectRowAtUnlockAeCell */
"$title:CouldNotUnlockAE" = "Could not unlock AE";

/* APanelViewController.didSelectRowAtUnlockAfCell */
"$title:CouldNotUnlockAF" = "Could not unlock AF";

/* PlaybackViewController.unprotectAllContents */
"$title:CouldNotUnprotectAllContents" = "Could not unprotect all contents";

/* PictureContentViewController.unprotectPicture */
"$title:CouldNotUnprotectPicture" = "Could not unprotect picture";

/* VideoContentViewController.unprotectVideo */
"$title:CouldNotUnprotectVideo" = "Could not unprotect video";

/* BluetoothSettingViewController.didTapDoneButton */
"$title:DelayNewBluetoothSetting" = "This setting is not applied immediately";

/* WifiSettingViewController.didTapDoneButton */
"$title:DelayNewWifiHostSetting" = "This setting is not applied immediately";

/* SystemViewController.didChangeWifiCh */
"$title:DelayNewWifiSetting" = "This setting is not applied immediately";

/* FavoriteLoadingViewController.editActionsForRowAtIndexPath */
"$title:DeleteFavroiteSetting" = "Delete";

/* ConnectionViewController.didSelectRowAtClearRememberedCameraSettingCell */
"$title:ExecuteClearCameraSetting" = "Clear camera setting";

/* CameraLogViewController.didTapClearButton */
"$title:ExecuteClearLog" = "Clear camera log";

/* PictureContentViewController.didTapEraseButton */
"$title:ExecuteErasePicture" = "Erase this picture";

/* VideoContentViewController.didTapEraseButton */
"$title:ExecuteEraseVideo" = "Erase this video";

/* PictureContentViewController.didTapProtectButton */
"$title:ExecuteProtectPicture" = "Protect this picture";

/* VideoContentViewController.didTapProtectButton */
"$title:ExecuteProtectVideo" = "Protect this video";

/* PictureContentViewController.didTapResizeButton */
"$title:ExecuteResizePicture1024" = "1024 pixels";

/* PictureContentViewController.didTapResizeButton */
"$title:ExecuteResizePicture1600" = "1600 pixels";

/* PictureContentViewController.didTapResizeButton */
"$title:ExecuteResizePicture1920" = "1920 pixels";

/* PictureContentViewController.didTapResizeButton */
"$title:ExecuteResizePicture2048" = "2048 pixels";

/* PictureContentViewController.didTapResizeButton */
"$title:ExecuteResizePictureOriginal" = "Original size";

/* VideoContentViewController.didTapResizeButton */
"$title:ExecuteResizeVideo1280Fine" = "1280 x 720, Fine";

/* VideoContentViewController.didTapResizeButton */
"$title:ExecuteResizeVideo1280Normal" = "1280 x 720, Normal";

/* VideoContentViewController.didTapResizeButton */
"$title:ExecuteResizeVideo1920Fine" = "1920 x 1080, Fine";

/* VideoContentViewController.didTapResizeButton */
"$title:ExecuteResizeVideo1920Normal" = "1920 x 1080, Normal";

/* PictureContentViewController.didTapShareButton */
"$title:executeSharePicture" = "Share this picture";

/* VideoContentViewController.didTapShareButton */
"$title:ExecuteShareVideo" = "Share this video";

/* PlaybackViewController.didTapUnprotectButton */
"$title:ExecuteUnprotectAllContents" = "Unprotect all contents";

/* PictureContentViewController.didTapUnprotectButton */
"$title:ExecuteUnprotectPicture" = "Unprotect this picture";

/* VideoContentViewController.didTapUnprotectButton */
"$title:ExecuteUnprotectVideo" = "Unprotect this video";

/* RecordingViewController.cameraDidPauseTakingPictureForIntervalTimer */
"$title:IntervalTimerProgres(%f,%ld,%ld)" = "Interval Timer: %2$ld/%3$ld (wait %1$0.0f sec)";

/* RecordingViewController.cameraDidTakePictureByIntervalTimer
   RecordingViewController.cameraWillTakePictureByIntervalTimer */
"$title:IntervalTimerProgres(%ld,%ld)" = "Interval Timer: %1$ld/%2$ld";

/* RecordingViewController.cameraDidStartTakingPluralPictures */
"$title:IntervalTimerStart" = "Interval Timer";

/* RecordingViewController.lockAutoExposurePoint
   RecordingViewController.lockAutoFocusPoint
   RecordingViewController.startMagnifyingLiveView */
"$title:LiveViewImageIsEmpty" = "No live view image";

/* UIViewController.showAlertMessage */
"$title:OK" = "OK";

/* RecordingViewController.didFailToReceiveCapturedImageWithError */
"$title:ReceiveCapturedImageFailed" = "Could not receive captured image";

/* RecImageViewController.didFailToReceiveCapturedImagePreviewWithError
   RecordingViewController.didFailToReceiveCapturedImagePreviewWithError */
"$title:ReceiveCapturedImagePreviewFailed" = "Could not receive preview of captured image";

/* RecordingViewController.didChangeRecordingElapsedTime */
"$title:RecordingVideo(%ld,%ld,%ld)" = "Recording: %1$ld:%2$02ld:%3$02ld";

/* RecordingViewController.cameraDidStartRecordingVideo */
"$title:RecordingVideoStart" = "Recording";

/* PictureContentViewController.didTapResizeButton */
"$title:ResizePicture" = "Resize this picture";

/* VideoContentViewController.didTapResizeButton */
"$title:ResizeVideo" = "Resize this video";

/* ScanStickerViewController.showAlertMessage */
"$title:ScanResult" = "Scan Result";

/* FavoriteLoadingViewController.editActionsForRowAtIndexPath */
"$title:ShareFavroiteSetting" = "Share";

/* RecordingViewController.cameraDidStopTakingPluralPictures */
"$title:TakingPluralPicturesFailed" = "Could not taking all pictures";

/* RecordingViewController.cameraDidPauseTakingPictureForIntervalTimer */
"$title:TakingPluralPicturesProgres(%f,%ld,%ld)" = "Interval Bracketing: %2$ld/%3$ld (wait %1$0.0f sec)";

/* RecordingViewController.cameraDidTakePictureByAutoBracketing
   RecordingViewController.cameraDidTakePictureByIntervalTimer
   RecordingViewController.cameraWillTakePictureByAutoBracketing
   RecordingViewController.cameraWillTakePictureByIntervalTimer */
"$title:TakingPluralPicturesProgres(%ld,%ld)" = "Interval Bracketing: %1$ld/%2$ld";

/* RecordingViewController.cameraDidStartTakingPluralPictures */
"$title:TakingPluralPicturesStart" = "Interval Bracketing";

/* PlaybackViewController.commitEditingStyle
   PlaybackViewController.downloadContentList */
"$title:TotalOfContentsAndFiles(%ld contents, %ld files)" = "%1$ld contents (%2$ld files)";

